
1)difference between http and ssh in git

Both ssh and HTTP are protocols to communicate between client and server.Following are the basic difference between
 SSH and HTTP. SSH means “Secure Shell”. It has a built-in username/password authentication system to establish a connection. ...
 HTTP means HyperText Transfer Protocol.
 
2)generate ssh key file:
ssh-keygen -t rsa -P ""
Ssh-keygen is a tool for creating new authentication key pairs for SSH. Such key pairs are used for automating logins, single sign-on, and for authenticating hosts.





3)To check whether we have ssh key generated file or not:


First, you should check to make sure you don’t already have a key. By default, a user’s SSH keys are stored in that user’s ~/.ssh directory. You can easily check to see if you have a key already by going to that directory and listing the contents:

[diyotta_dev@tfgawsuswoddv01 diyotta_dev]$ cd ~/.ssh
[diyotta_dev@tfgawsuswoddv01 .ssh]$ ls
authorized_keys  id_rsa  id_rsa.pub  known_hosts
[diyotta_dev@tfgawsuswoddv01 .ssh]$


 4) to copy the ssh key file:
 
command:
cat .ssh/id_rsa.pub

result: copy the whole thing in a note pad and paste it in git account which you are using.

ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAsCA6nEQNafVoVyzyfEB+6eDAS9C2KjmXFDwfn+AG0ExwHel+Kjf3vqtYPmvg7wuEoSm5A6e8JuubZXkbdjWEK8oZGTdk6Zz5oO9hNPT0K+Y5gW5AEDu6XycKOJ/DVPV2JrMaqWG5Upk0Jb3cWrr+5PfE6HnVGZTldjQ89oBNPbWFsM1pMiW6YF7Izk8AWGu3PQZkWpO/QbvVdqhGYpYQp9cO7wE1Z5W67bsalruMKiA/d1jO3XVwDjm1DeXseEAsmlkGQzGp5CBwJCOfEj09e4rY3OFUCzyli4mnRHd0fIHNvWbO+yPkS3kSYJ//cwBA6mUWdJgJaf9xetS2PfyzZQ== diyotta_dev@tfgawsuswoddv01


5)
local git creation

create a folder
mkdir test

goto that test folder
type

git init

add a file to the folder
git add newfile.file
git commit -m “new file added” newfile.file
If you don’t provide file after the comment,


[diyotta_dev@tfgawsuswoddv01 support]$ mkdir test
[diyotta_dev@tfgawsuswoddv01 support]$ cd test
[diyotta_dev@tfgawsuswoddv01 test]$ ls -ltr
total 0
[diyotta_dev@tfgawsuswoddv01 test]$ git init
Initialized empty Git repository in /app/diyotta_dev/diyotta/controller/support/test/.git/
[diyotta_dev@tfgawsuswoddv01 test (master)]$ ls -ltr
total 0
[diyotta_dev@tfgawsuswoddv01 test (master)]$

to change one barnch to other branch:
-------------------------------------
[diyotta_dev@tfgawsuswoddv01 test (master)]$ git branch
* master
[diyotta_dev@tfgawsuswoddv01 test (master)]$ git checkout
[diyotta_dev@tfgawsuswoddv01 test (master)]$ git checkout -b feature/Diyotta_Test
Switched to a new branch 'feature/Diyotta_Test'
[diyotta_dev@tfgawsuswoddv01 test (feature/Diyotta_Test)]$



--------------------------

[diyotta_dev@tfgawsuswoddv01 TechstyleGit (feature/Diyotta_Test)]$ vim testfile.txt
[diyotta_dev@tfgawsuswoddv01 TechstyleGit (feature/Diyotta_Test)]$ git add testfile.txt
[diyotta_dev@tfgawsuswoddv01 TechstyleGit (feature/Diyotta_Test)]$ git commit -m "my test file" testfile.txt
[feature/Diyotta_Test a21edb7] my test file
 1 files changed, 1 insertions(+), 0 deletions(-)
 create mode 100644 testfile.txt
[diyotta_dev@tfgawsuswoddv01 TechstyleGit (feature/Diyotta_Test)]$ git push origin feature/Diyotta_Test
Counting objects: 4, done.
Delta compression using up to 16 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 292 bytes, done.
Total 3 (delta 1), reused 0 (delta 0)
remote:
remote: Create pull request for feature/Diyotta_Test:
remote:   https://git.justfab.net/projects/EDW/repos/snowflake_diyotta/compare/commits?sourceBranch=refs/heads/feature/Diyotta_Test
remote:
To ssh://git@git.justfab.net/edw/snowflake_diyotta.git
   1614244..a21edb7  feature/Diyotta_Test -> feature/Diyotta_Test

   
To abort the merge after you run git  pull command
------------------------------------------
   
   git reset --merge


   
   ----------------to know the user and email for the GIT----


[diyotta_dev@tfgawsuswoddv01 test (feature/Diyotta_Test|MERGING)]$ git config user.name
Hemananth Umapathi
[diyotta_dev@tfgawsuswoddv01 test (feature/Diyotta_Test)]$ git config user.email
humapathi@techstyle.com
[diyotta_dev@tfgawsuswoddv01 test (feature/Diyotta_Test)]$


-----------------Setting your Git username for a single repository----------

hange the current working directory to the local repository where you want to configure the name that is associated with your Git commits.

Set a Git username:

$ git config user.name "Mona Lisa"
Confirm that you have set the Git username correctly:

$ git config user.name
result:
 Mona Lisa
 
 
 ------------------------ Set an email address in Git-------------------------
 
 Set an email address in Git. You can use your GitHub-provided no-reply email address or any email address.

$ git config --global user.email "email@example.com"
Confirm that you have set the email address correctly in Git:

$ git config --global user.email
email@example.com


---------------------------impotant note:-------------------------

git fetch [fetch all the info you don't
have from remote repository, no automatical
merging]
$ git merge [automatically merge data from
remote with the your repository data]
$ git pull [fetch and merge automatically]
pull = fetch + merge
--------------------------