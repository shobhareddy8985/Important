i am shobha.
i pursued my graduation from JNTUH university in the year 2016.
i have started my carreer in a small comapany as acustomer support using acumatica Tool.

Its been 2 1/2 year of  jouney with diyotta And the people here are very supporting and encouraging always.
I am lucky that i got this oppurtunity to explore morethings on my own.
--------------------------------------------------------------------------------------------------------------------------


Architectural Components
-----------------------
Controller

The Controller is Java based application and is the primary component of the Diyotta software. The Controller manages the metadata repository, client user interface modules and Agent communications.


1) userinterface:
 
 User Interface

The Diyotta User interface is browser based (thin client) modules requiring no separate installation and supports security by seamlessly integrating with SSL and SSO tools like LDAP/AD and OKTA.

2)controller:

(The Controller is Java based application and is the primary component of the Diyotta software. The Controller manages the metadata repository, client user interface modules and Agent communications. The controller captures the logical user instructions from user interface and maintains them in the metadata repository. During runtime it then converts these logic instructions stored in metadata into messages that agents can understand and perform necessary actions. It also captures operational and runtime statistics and maintains them in metadata. It is typically installed on a single server and can be setup to provide high availability capabilities.)

 3)metadata _repository :(The Metadata Repository is maintained in a relational database. It stores the logical flow of data built through user interface, process scheduling information, operational statistics and administration related metadata. The metadata repository can be hosted PostgreSQL database. Metadata is very lightweight and provides backup and restore procedures)
 
 4)controller broker :( manages communication between controller and agent):
 
 Broker

The Manager Broker is a Java based application and is bridge between Controller and Agent to pass the instructions and response between them. It creates queues to store and publish the messages between Controller and the associated Agents. Single broker is able to manage communication between a Controller and multiple agents registered to it.


 5) agent (data transtfer ,data receive ,executions):
 
 The Agent is a lightweight Java based application that can be installed on Linux/Unix or windows based systems. It is responsible for picking instructions from the controller and executing those instructions on the requested system. Communication between the Controller and the Agents is encrypted and handled through a message exchange mechanism. The Agents can be logically grouped to distribute the instructions and orchestrate load balancing requirements. Number of agents and location of Agent installation depends on where the source and target data resides and the application architecture demands.
 
 
Note:
lightweight software also called  lightweight application, is a computer program that is designed to have a small memory footprint (RAM usage) and low CPU usage, overall a low usage of system resources.
 
 
----------------------------------------

User Guide
The Diyotta User Guide provides detailed information about all the modules in Diyotta. The user guide covers all the functionalities supported by Diyotta and step by step instructions to work with various components. See below pages for module specific guides.

Using Diyotta Admin

Using Diyotta Studio

Using Diyotta Monitor

Using Diyotta Scheduler

Using Diyotta CLI



Using Diyotta Studio
Diyotta Studio is a collaborative multi-user environment to develop and implement data integration processes seamlessly. It provides rich graphical interface with ability to create objects, drag and drop these objects to create data integration pipelines, define run-time properties and orchestrate the flow of these pipelines.



Below are the major components in Studio that are used to build business logic.

Data Points: This is used to provide connection details for the source and target system.

Data Objects: This is metadata of the physical objects like tables and files.

Data Flow: The data integration pipelines are developed here using the Data points and the Data Objects.

Job Flow: This provides capability to define order and condition based on which data flows should be run



------------------------------------------------------------------------------------------
Diyotta Disaster Recovery (DR)

Diyotta server can be configured to support needs. The following is DR setup configuration 

--------------------------------------------------------------------------------------


